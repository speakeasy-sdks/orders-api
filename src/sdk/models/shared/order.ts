/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Billing Address
 */
export class Address extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "city" })
    city?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "state" })
    state?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "street" })
    street?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "zip" })
    zip?: string;
}

/**
 * Order Status
 */
export enum OrderStatus {
    Placed = "placed",
    Approved = "approved",
    Delivered = "delivered",
}

export class Order extends SpeakeasyBase {
    /**
     * Billing Address
     */
    @SpeakeasyMetadata()
    @Expose({ name: "address" })
    @Type(() => Address)
    address?: Address;

    @SpeakeasyMetadata()
    @Expose({ name: "complete" })
    complete?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "petId" })
    petId?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity?: number;

    /**
     * Shipping Date
     */
    @SpeakeasyMetadata()
    @Expose({ name: "shipDate" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    shipDate?: Date;

    /**
     * Order Status
     */
    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: OrderStatus;
}
